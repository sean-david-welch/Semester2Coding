Part 1: Sorting and Searching: Algorithm Analysis (70 marks)

1. Write a Bubble Sort algorithm that sorts the data using a column based on your student number.
If two items have the same value, sort based on column 1.
- You will receive higher marks for optimal (low run-time) solutions.
  Highlight in the submission the reason why you chose your sorting algorithm
  with reference to the runtime complexity.
- The sorting algorithm must be your own implementation.
  You will receive 0 marks for using an imported library to complete this task.
- (20 Marks)
- Input: 10,000 unsorted records
- Output: 10,000 records sorted in ascending order by column X

2. Experimentally analyze the time complexity of your sorting algorithm that you wrote for question 1 above.
- Show your results by taking the average elapsed time for 10, 100, 1000, 5000, and 10000 records.
- (15 Marks)

3. Write a Quick Sort algorithm that sorts the data using a column based on your student number.
  If two items have the same value, sort based on column 1.
- You will receive higher marks for optimal (low run-time) solutions.
  Highlight in the submission the reason why you chose your
  sorting algorithm with reference to the runtime complexity.
- The sorting algorithm must be your own implementation.
  You will receive 0 marks for using an imported library to complete this task.
- (20 Marks)
- Input: 10,000 unsorted records
- Output: 10,000 records sorted in ascending order by column X

4. Write a Binary Search algorithm that accepts a sorted column type and searches the data record from the dataset.
- For this, you can use the sort() Java method to sort the elements in that column
  (can be any column between 2 and 4).
- If an element X is not found, display “X was not found in the Y list!”,
  where Y is the title of the chosen sorted column
  (e.g., Name, Country, Location, Age, etc.).
- If the element was found in the list, display "X was found in the Y list".
- (15 Marks)
- Input: 10,000 sorted records
- Output: list of record details with the same associated column label as entered by the user
